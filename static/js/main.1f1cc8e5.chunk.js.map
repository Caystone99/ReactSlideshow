{"version":3,"sources":["assets/slide1.jpg","assets/slide2.jpg","assets/slide3.jpg","assets/slide4.jpg","assets/slide5.jpg","Slide.js","Spacer.js","Dots.js","Slideshow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","s","Slide","props","react_default","a","createElement","className","position","transition","src","image","alt","Spacer","_this$props","this","w","h","style","width","height","Component","Dot","src_Spacer","slideId","dotId","Dots","slides","map","slide","id","Dots_Dot","key","container","onScreen","offScreenRight","offScreenLeft","Slideshow","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startCarousel","carouselInterval","setInterval","transitionSlides","currentId","_this$state","state","slide1","slide2","setState","setTimeout","resetSlideOffScreen","_this$state2","length","clearInterval","_this$state3","src_Slide","src_Dots","slide3","slide4","slide5","App","src_Slideshow","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f1cc8e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slide1.11f6cfcb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide2.c529a353.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide3.3f5aeab6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide4.a799fb4f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide5.869caaa3.jpg\";","//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React from \"react\";\n\nconst s = {\n    container: \"abs fullW fullH\",\n    slideImage: \"fullH fullW imgCover\"\n};\n\nconst Slide = props => {\n    return (\n        <div\n            className={\n                s.container + \" \" + props.position + \" \" + props.transition\n            }\n        >\n            <img src={props.image} className={s.slideImage} alt=\"slide\" />\n        </div>\n    );\n};\n\nexport default Slide;\n","import React, { Component } from \"react\";\n\nclass Spacer extends Component {\n    render() {\n        const { w, h } = this.props;\n        if (w) {\n            return <div style={{ width: w }} className=\"fullH\" />;\n        } else if (h) {\n            return <div style={{ height: h }} className=\"fullW\" />;\n        }\n    }\n}\n\nexport default Spacer;\n","import React, { Component } from \"react\";\nimport Spacer from \"./Spacer\";\n\nconst s = {\n    container: \"fullW height70 abs bot0 fCenter black50\",\n    dots: \"row\"\n};\n\nconst Dot = props => (\n    <div className={s.dots}>\n        <Spacer w={5} />\n        <div\n            className={\n                \"dot \" + (props.slideId === props.dotId ? \"white\" : \"white50\")\n            }\n        />\n        <Spacer w={5} />\n    </div>\n);\n\nclass Dots extends Component {\n    render() {\n        const { slideId, slides } = this.props;\n        return (\n            <div className={s.container}>\n                <div className={s.dots}>\n                    {slides.map((slide, id) => (\n                        <Dot slideId={slideId} dotId={id} key={id} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dots;\n","//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React, { Component } from \"react\";\nimport Slide from \"./Slide\";\nimport Dots from \"./Dots\";\n\n//===========================================\n// CREATE STYLES OBJECT\n//===========================================\nconst s = {\n    container: \"fullW fullH rel overflowH\",\n    onScreen: \"left0\",\n    offScreenRight: \"left100vw\",\n    offScreenLeft: \"leftM100vw\",\n    transition: \"transition1l\"\n};\n\n//===========================================\n// SLIDESHOW COMPONENT\n//===========================================\nclass Slideshow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slide1: {\n                id: 0,\n                position: s.onScreen,\n                transition: true\n            },\n            slide2: {\n                id: 1,\n                position: s.offScreenRight,\n                transition: true\n            },\n            currentId: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startCarousel();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.carouselInterval);\n    }\n\n    startCarousel = () => {\n        this.carouselInterval = setInterval(() => {\n            this.transitionSlides();\n        }, 4000);\n    };\n\n    transitionSlides = () => {\n        const { slide1, slide2 } = this.state;\n        let currentId;\n        if (slide1[\"position\"] === s.onScreen) {\n            slide1[\"position\"] = s.offScreenLeft;\n            slide2[\"position\"] = s.onScreen;\n            currentId = slide2.id;\n        } else {\n            slide1[\"position\"] = s.onScreen;\n            slide2[\"position\"] = s.offScreenLeft;\n            currentId = slide1.id;\n        }\n        this.setState({\n            slide1: slide1,\n            slide2: slide2,\n            currentId: currentId\n        });\n        setTimeout(() => {\n            this.resetSlideOffScreen();\n        }, 2000);\n    };\n\n    resetSlideOffScreen = () => {\n        const { slide1, slide2 } = this.state;\n        const { slides } = this.props;\n        if (slide1[\"position\"] === s.offScreenLeft) {\n            slide1[\"transition\"] = false;\n            slide1[\"position\"] = s.offScreenRight;\n            slide1[\"id\"] = slide2.id + 1 === slides.length ? 0 : slide2.id + 1;\n        } else {\n            slide2[\"transition\"] = false;\n            slide2[\"position\"] = s.offScreenRight;\n            slide2[\"id\"] = slide1.id + 1 === slides.length ? 0 : slide1.id + 1;\n        }\n        this.setState({\n            slide1: slide1,\n            slide2: slide2\n        });\n        setTimeout(() => {\n            slide1[\"transition\"] = true;\n            slide2[\"transition\"] = true;\n            this.setState({\n                slide1: slide1,\n                slide2: slide2\n            });\n        }, 500);\n    };\n\n    render() {\n        const { slide1, slide2, currentId } = this.state;\n        const { slides } = this.props;\n        return (\n            <div className={s.container}>\n                <Slide\n                    image={slides[slide1.id]}\n                    position={slide1.position}\n                    transition={slide1.transition ? s.transition : \"\"}\n                />\n                <Slide\n                    image={slides[slide2.id]}\n                    position={slide2.position}\n                    transition={slide2.transition ? s.transition : \"\"}\n                />\n                <Dots slideId={currentId} slides={slides} />\n            </div>\n        );\n    }\n}\n\nexport default Slideshow;\n","//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React, { Component } from \"react\";\nimport Slideshow from \"./Slideshow\";\nimport slide1 from \"./assets/slide1.jpg\";\nimport slide2 from \"./assets/slide2.jpg\";\nimport slide3 from \"./assets/slide3.jpg\";\nimport slide4 from \"./assets/slide4.jpg\";\nimport slide5 from \"./assets/slide5.jpg\";\n\n//===========================================\n// CREATE STYLES OBJECT\n//===========================================\nconst s = {\n    container: \"screenW screenH dGray col\",\n    header: \"flex1 fCenter fSize2\",\n    main: \"flex8 white\",\n    footer: \"flex1 fCenter\"\n};\n\n//===========================================\n// SLIDES DATA\n//===========================================\nconst slides = [slide1, slide2, slide3, slide4, slide5];\n\n//===========================================\n// APP COMPONENT\n//===========================================\nclass App extends Component {\n    render() {\n        return (\n            <div className={s.container}>\n                <div className={s.header}>Automatic Slideshow Carousel</div>\n                <div className={s.main}>\n                    <Slideshow slides={slides} />\n                </div>\n                <div className={s.footer}>Built in React - by Ashwanth A R</div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./custom.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}